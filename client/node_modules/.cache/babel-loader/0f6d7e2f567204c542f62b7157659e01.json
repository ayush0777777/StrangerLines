{"ast":null,"code":"var _jsxFileName = \"D:\\\\6sem\\\\BLOG_MERN\\\\client\\\\src\\\\pages\\\\login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./login.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const userRef = useRef();\n  console.log(userRef);\n  const passwordRef = useRef();\n  const {\n    dispatch,\n    isFetching\n  } = useContext(Context);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch({\n      type: \"LOGIN_START\"\n    });\n\n    try {\n      const res = await axios.post(\"/auth/login\", {\n        username: userRef.current.value,\n        password: passwordRef.current.value\n      });\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: \"LOGIN_FAILURE\"\n      });\n    }\n  }; // console.log(user);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"loginTitle\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"loginForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"loginInput\",\n        minLength: 3,\n        placeholder: \"Enter your username...\",\n        ref: userRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"loginInput\",\n        placeholder: \"Enter your password...\",\n        required: true,\n        pattern: \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,12}$\",\n        title: \"Must contain atleast 1 uppercase letter, 1 lowercase letter, 1 digit, 1 special character and length should be minimum 8 and maximum 12\",\n        ref: passwordRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginButton\",\n        type: \"submit\",\n        disabled: isFetching,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"loginRegisterButton\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"link\",\n        to: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"068LEokfaleFcjBxhuLwoVqedIQ=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/6sem/BLOG_MERN/client/src/pages/login/Login.jsx"],"names":["useContext","useRef","Link","Context","axios","Login","userRef","console","log","passwordRef","dispatch","isFetching","handleSubmit","e","preventDefault","type","res","post","username","current","value","password","payload","data","err"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,OAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE5B,QAAMC,OAAO,GAAGL,MAAM,EAAtB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMG,WAAW,GAAGR,MAAM,EAA1B;AACA,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BX,UAAU,CAACG,OAAD,CAA3C;;AAEA,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,aAAX,EAA0B;AACxCC,QAAAA,QAAQ,EAAEZ,OAAO,CAACa,OAAR,CAAgBC,KADc;AAExCC,QAAAA,QAAQ,EAAEZ,WAAW,CAACU,OAAZ,CAAoBC;AAFU,OAA1B,CAAlB;AAIAV,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,eAAR;AAAyBO,QAAAA,OAAO,EAAEN,GAAG,CAACO;AAAtC,OAAD,CAAR;AACH,KAND,CAME,OAAOC,GAAP,EAAY;AACVd,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH;AACJ,GAZD,CAP4B,CAqB5B;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,QAAQ,EAAEH,YAAtC;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,YAFd;AAGI,QAAA,SAAS,EAAE,CAHf;AAII,QAAA,WAAW,EAAC,wBAJhB;AAKI,QAAA,GAAG,EAAEN;AALT;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,SAAS,EAAC,YAFd;AAGI,QAAA,WAAW,EAAC,wBAHhB;AAII,QAAA,QAAQ,MAJZ;AAKI,QAAA,OAAO,EAAC,kEALZ;AAMI,QAAA,KAAK,EAAG,yIANZ;AAOI,QAAA,GAAG,EAAEG;AAPT;AAAA;AAAA;AAAA;AAAA,cAVJ,eAoBI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAA8C,QAAA,QAAQ,EAAEE,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eA0BI;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,EAAE,EAAC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GAxDuBN,K;;KAAAA,K","sourcesContent":["import { useContext, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { Context } from \"../../context/Context\";\r\nimport \"./login.css\"\r\nimport axios from \"axios\";\r\n\r\nexport default function Login() {\r\n\r\n    const userRef = useRef();\r\n    console.log(userRef);\r\n    const passwordRef = useRef();\r\n    const { dispatch, isFetching } = useContext(Context);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: \"LOGIN_START\" });\r\n        try {\r\n            const res = await axios.post(\"/auth/login\", {\r\n                username: userRef.current.value,\r\n                password: passwordRef.current.value\r\n            })\r\n            dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\r\n        } catch (err) {\r\n            dispatch({ type: \"LOGIN_FAILURE\" });\r\n        }\r\n    };\r\n\r\n    // console.log(user);\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <span className=\"loginTitle\">Login</span>\r\n            <form className=\"loginForm\" onSubmit={handleSubmit}>\r\n                <label>Username</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"loginInput\"\r\n                    minLength={3}\r\n                    placeholder=\"Enter your username...\"\r\n                    ref={userRef}\r\n                />\r\n                <label>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"loginInput\"\r\n                    placeholder=\"Enter your password...\"\r\n                    required\r\n                    pattern=\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,12}$\"\r\n                    title = \"Must contain atleast 1 uppercase letter, 1 lowercase letter, 1 digit, 1 special character and length should be minimum 8 and maximum 12\"\r\n                    ref={passwordRef}\r\n                />\r\n                {/* Make button disabled if fetching */}\r\n                <button className=\"loginButton\" type=\"submit\" disabled={isFetching}> \r\n                    Login\r\n                </button>\r\n            </form>\r\n            <button className=\"loginRegisterButton\">\r\n                <Link className=\"link\" to=\"/register\">Register</Link>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}