{"ast":null,"code":"var _jsxFileName = \"D:\\\\6sem\\\\BLOG_MERN\\\\client\\\\src\\\\components\\\\singlePost\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./singlePost.css\";\nimport axios from \"axios\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  console.log(location); //pathname obtained is pathname: \"/post/625008204cfc550d805c7759\". we need the post id. \n  // console.log(location.pathname.split(\"/\")[2]);\n\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]); //Whenever this path changes, fire useEffect\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        // can also write title:title, desc:desc\n        desc\n      }); // window.location.reload(); -->works, but reloads page\n\n      setUpdateMode(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: PF + post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-solid fa-pen-to-square\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-solid fa-trash-can\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["D:/6sem/BLOG_MERN/client/src/components/singlePost/SinglePost.jsx"],"names":["useContext","useEffect","useState","Link","useLocation","axios","Context","SinglePost","location","console","log","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","photo","e","target","value","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport \"./singlePost.css\"\r\nimport axios from \"axios\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nexport default function SinglePost() {\r\n    const location = useLocation();\r\n    console.log(location); //pathname obtained is pathname: \"/post/625008204cfc550d805c7759\". we need the post id. \r\n    // console.log(location.pathname.split(\"/\")[2]);\r\n    const path = location.pathname.split(\"/\")[2];\r\n    const [post, setPost] = useState({});\r\n    const PF = \"http://localhost:5000/images/\";\r\n    const { user } = useContext(Context);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [updateMode, setUpdateMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getPost = async () => {\r\n            const res = await axios.get(\"/posts/\" + path);\r\n            setPost(res.data);\r\n            setTitle(res.data.title);\r\n            setDesc(res.data.desc);\r\n        }\r\n        getPost();\r\n    }, [path]); //Whenever this path changes, fire useEffect\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            await axios.delete(`/posts/${post._id}`, {\r\n                data: { username: user.username }\r\n            });\r\n            window.location.replace(\"/\");\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const handleUpdate = async () => {\r\n        try {\r\n            await axios.put(`/posts/${post._id}`, {\r\n                username: user.username,\r\n                title, // can also write title:title, desc:desc\r\n                desc,\r\n            });\r\n            // window.location.reload(); -->works, but reloads page\r\n            setUpdateMode(false);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"singlePost\">\r\n            <div className=\"singlePostWrapper\">\r\n                {post.photo && (\r\n                    <img className=\"singlePostImg\"\r\n                        src={PF + post.photo}\r\n                        alt=\"\"\r\n                    />\r\n                )}{\r\n                    updateMode ? (\r\n                        <input\r\n                            type=\"text\"\r\n                            value={title}\r\n                            className=\"singlePostTitleInput\"\r\n                            autoFocus\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                        />) : (\r\n\r\n                        <h1 className=\"singlePostTitle\">\r\n                            {title}\r\n                            {post.username === user?.username && (\r\n\r\n                                <div className=\"singlePostEdit\">\r\n                                    <i className=\"singlePostIcon fa-solid fa-pen-to-square\" onClick={() => setUpdateMode(true)}></i>\r\n                                    <i className=\"singlePostIcon fa-solid fa-trash-can\" onClick={handleDelete}></i>\r\n                                </div>\r\n                            )\r\n                            }\r\n                        </h1>\r\n                    )\r\n                }\r\n                <div className=\"singlePostInfo\">\r\n                    <span className=\"singlePostAuthor\">\r\n                        Author:\r\n                        <Link to={`/?user=${post.username}`} className=\"link\">\r\n                            <b>{post.username}</b>\r\n                        </Link>\r\n                    </span>\r\n                    <span className=\"singlePostDate\">{new Date(post.createdAt).toDateString()}</span>\r\n                </div>\r\n                {updateMode ? (\r\n                    <textarea className=\"singlePostDescInput\" value={desc} onChange={(e) => setDesc(e.target.value)} />\r\n                ) : (\r\n                    <p className=\"singlePostDesc\">\r\n                        {desc}\r\n                    </p>\r\n                )}\r\n                {updateMode && (\r\n                    <button className=\"singlePostButton\" onClick={handleUpdate}>Update</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}